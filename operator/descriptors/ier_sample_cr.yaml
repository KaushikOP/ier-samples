###############################################################################
#
# Licensed Materials - Property of IBM
#
# (C) Copyright IBM Corp. 2019. All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: ier
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 5.2.1.6
spec:
  ## TIPS: The names of all variables in the spec field are converted to snake_case by the operator before running ansible
  ## For example, serviceAccount in the spec becomes service_account in ansible.
  ## It is recommended that you perform some type validation in Ansible on the variables to ensure that
  ## your application is receiving expected input.
  appVersion: 5.2.1.6
  ## MUST exist, used to accept ibm license, valid value only can be "accept"
  ibm_license: ""
  ## shared configuration among all tribe
  shared_configuration:
    ## This is the deployment context is ier. No update it required.
    sc_deployment_context: ier
    sc_image_repository: cp.icr.io
    root_ca_secret: icp4a-root-ca
    sc_optional_components: ier
    ## Specify the RunAsUser for the security context of the pod.  This is usually a numeric value that corresponds to a user ID.
    sc_run_as_user:
    ## Shared custom TLS secret which will be used to sign all external routes if defined.
    ## If this is not defined, all external routes will be signed with `root_ca_secret`
    external_tls_certificate_secret:
    ## For ROKS, this is used to enable the creation of ingresses. The default value is "false", which routes will be created.
    sc_ingress_enable: false
    ## For ROKS Ingress, provide TLS secret name for Ingress controller.
    sc_ingress_tls_secret_name: <Required>
    sc_deployment_hostname_suffix: "{{ meta.name }}.<Required>"
    storage_configuration:
      sc_slow_file_storage_classname: "<Required>"
      sc_medium_file_storage_classname: "<Required>"
      sc_fast_file_storage_classname: "<Required>"
    image_pull_secrets:
    - "admin.registrykey"
    sc_deployment_license: User
    sc_deployment_type: Production
    ## The platform to be deployed specified by the user.  Possible values are: OCP, ROKS, and other.  This is normally populated by the User script
    ## based on input from the user.
    sc_deployment_platform:
   

  ########################################################################

  ########   IBM Enterprise Records configuration      ########

  ########################################################################
  ier_configuration:
      arch:
        amd64: "3 - Most preferred"
      replica_count: 2
     # Optional: Use an existing certificate for automatic creation of OpenShift routes.
     # Set this key if you have an external TLS certificate. Leave this empty if you don't have an external TLS certificate, operator will generate one for you.
      ier_ext_tls_secret_name:
     ## Optional. The Certificate Authority (CA) used to sign the external TLS secret for automatic creation of OpenShift routes.
     ## Set this key if you have a CA to sign the external TLS certificate, leave this parameter empty if you don't have the CA of your external TLS certificate.
      ier_auth_ca_secret_name:
      
      image:
        repository: cp.icr.io/cp/cp4a/ier/ier
        tag: ga-521-ier-fp006
        pull_policy: IfNotPresent
     # Logging for workloads
      log:
        format: json
     # resource and autoscaling setting
      resources:
        requests:
          cpu: 500m
          memory: 512Mi
        limits:
          cpu: 1
          memory: 1536Mi
     # Horizontal Pod Autoscaler
      auto_scaling:
        enabled: false
        max_replicas: 3
        min_replicas: 1
        target_cpu_utilization_percentage: 80
     # IER Production setting
      ier_production_setting:
        license: accept
      collectd_enable_plugin_write_graphite: false
      run_as_user: 
     # Specify the names of existing persistent volume claims to be used by your application.
     # Specify an empty string if you don't have existing persistent volume claim.
      datavolume:
        existing_pvc_for_ier_instance: "ier-instance"
        
      probe:
        readiness:
          initial_delay_seconds: 120
          period_seconds: 5
          timeout_seconds: 10
          failure_threshold: 6
        liveness:
          initial_delay_seconds: 600
          period_seconds: 5
          timeout_seconds: 5
          failure_threshold: 
